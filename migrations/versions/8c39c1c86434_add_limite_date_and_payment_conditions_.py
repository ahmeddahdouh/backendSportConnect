"""add limite date and payment conditions on event

Revision ID: 8c39c1c86434
Revises: 75280b147072
Create Date: 2025-05-08 22:20:20.089188

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8c39c1c86434'
down_revision: Union[str, None] = '75280b147072'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('events', sa.Column('date_limite_inscription', sa.Date(), nullable=True))
    op.add_column('events', sa.Column('is_paid', sa.Boolean(), nullable=True))
    op.add_column('events', sa.Column('price', sa.Float(), nullable=True))
    op.add_column('events', sa.Column('event_commande_participation', sa.String(), nullable=True))
    op.add_column('events', sa.Column('commodites', postgresql.JSONB(astext_type=sa.Text()), nullable=True))
    op.add_column('events', sa.Column('created_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('events', 'created_at')
    op.drop_column('events', 'commodites')
    op.drop_column('events', 'event_commande_participation')
    op.drop_column('events', 'price')
    op.drop_column('events', 'is_paid')
    op.drop_column('events', 'date_limite_inscription')
    # ### end Alembic commands ###
